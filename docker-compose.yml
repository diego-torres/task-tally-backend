services:
  postgres:
    image: postgres:15
    container_name: tasktally-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: tasktally
      POSTGRES_USER: tasktally
      POSTGRES_PASSWORD: tasktally
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  vault:
    image: hashicorp/vault:1.15
    container_name: tasktally-vault
    restart: unless-stopped
    cap_add: [ "IPC_LOCK" ]
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: root
      VAULT_DEV_LISTEN_ADDRESS: "0.0.0.0:8200"
    ports:
      - "8200:8200"
    command: >
      server -dev -dev-root-token-id=root -dev-listen-address=0.0.0.0:8200
    healthcheck:
      test: ["CMD", "sh", "-c", "VAULT_ADDR=http://127.0.0.1:8200 vault status >/dev/null 2>&1"]
      interval: 3s
      timeout: 2s
      retries: 20
    volumes:
      - ./vault:/work

  vault-init:
    image: hashicorp/vault:1.15
    container_name: tasktally-vault-init
    depends_on:
      vault:
        condition: service_healthy
    environment:
      VAULT_ADDR: http://vault:8200
      VAULT_TOKEN: root
      OUT_DIR: /work/bootstrap
    command: ["/bin/sh","-c","chmod +x /work/init-vault.sh && /work/init-vault.sh"]
    volumes:
      - ./vault:/work
    restart: "no"

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.4
    container_name: tasktally-keycloak
    restart: unless-stopped
    environment:
      KC_DB: postgres
      KC_DB_URL_HOST: postgres
      KC_DB_URL_PORT: 5432
      KC_DB_URL_DATABASE: tasktally
      KC_DB_USERNAME: tasktally
      KC_DB_PASSWORD: tasktally
      KC_HTTP_PORT: 8081
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8081:8081"
    depends_on:
      - postgres
    command: start-dev --http-port=8081
    volumes:
      - ./init-keycloak.sh:/opt/keycloak/init-keycloak.sh
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health/ready"]
      interval: 5s
      timeout: 3s
      retries: 20
  keycloak-init:
    image: quay.io/keycloak/keycloak:24.0.4
    depends_on:
      keycloak:
        condition: service_healthy
    entrypoint: ["/bin/bash", "/opt/keycloak/init-keycloak.sh"]
    volumes:
      - ./init-keycloak.sh:/opt/keycloak/init-keycloak.sh
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    restart: "no"

volumes:
  postgres_data:
